function [DPDt]=JM_analytical(x,y,dhdt,uf,du,A,eta,t,mu,H0)
% inputs: x (radial dimension, [m]),
%    y (depth, [m]),
%    dhdt (rate of unloading [m/s]),
%    uf, du (u is integration parameter, uf is max value, du is interval),
%    A (load radius [m]),
%    eta (viscosity [Pa s]),
%    t (time [s])
%    mu (shear modulus [Pa])
%    H0 (initial load height [m])

uii_lin = [0:du:uf]; 
[X,Y,U] = meshgrid(x,y,uii_lin);
s2yr = 365.25*24*3600;
t00 = 1e4*s2yr;
dtt=H0./dhdt;
tt0=t00+[(-5*dtt)-110e3 (-2*dtt)-(100e3*s2yr) -dtt-(100e3*s2yr) -100e3*s2yr 0 2e3*s2yr dtt+(2e3*s2yr)];
hscale = 1e3;

hi =    [0 0 0    H0 H0 0 0]/hscale;
dhdti = [0 0 dhdt 0 -dhdt 0 0]/hscale;
nu = 0.25;

rhos = 3300;g = 9.8;
tau = eta./mu;
E=exp(1);
alpha = rhos.*g.*A./(2.*mu);rhol = 900;

beta = @(tau, u ) alpha./(tau .* (u + alpha));


dhdti_tn = @(t,u,n) tau.*dhdti(n).*(1 - exp(-beta( tau, u).*(t-tt0(n))).*(t>=tt0(n)) - ...
        (1 + (beta(tau,u).*(tt0(n+1) - tt0(n)) - 1).*exp(-beta(tau,u).*t - tt0(n+1) )).*(t>tt0(n+1)));
Hi_tn = @(t,u,n) alpha./(u + alpha) .* hi(n).*(exp(-beta(tau,u).*(t-tt0(n))).*(t>=tt0(n)) - ...
exp(-beta(tau,u).*(t-tt0(n+1))).*(t>tt0(n+1))  );
        
dhdti_t = @(t,u) 0;
Hi_t = @(t,u) 0;
H_t_v = @(t,u) 0;
H_t_DP = @(t,u) 0;
H_t_dpt = @(t,u) 0;
HHf = @(t,u)  0;

HHn = @(t,n) (hi(n) + dhdti(n).*(t - tt0(n))).*((t >= tt0(n)) - (t >= tt0(n+1)));


for n = 1:length(tt0)-1
    dhdti_t = @(t,u) dhdti_tn (t,u,n) + dhdti_t (t,u);
    Hi_t = @(t,u) Hi_tn (t,u,n) + Hi_t (t,u);
    H_t_v = @(t,u) dIdt_disp(t,u,tau,hi(n),dhdti(n),alpha,tt0(n),tt0(n+1)) + H_t_v(t,u);
    H_t_DP = @(t,u) gradP_disp(t,u,tau,hi(n),dhdti(n),alpha,tt0(n),tt0(n+1)) + H_t_DP(t,u);
    H_t_dpt = @(t,u) dPdt_disp(t,u,tau,hi(n),dhdti(n),alpha,tt0(n),tt0(n+1)) + H_t_dpt(t,u);
    HHf = @(t) HHn(t,n) + HHf(t);
   
end    


H = @(t, u) Hi_t(t,u ) + dhdti_t(t,u);

HH= HHf(t + t00)*hscale;


I = @(t,u,r,z) (2./u.*besselj(1,u) - besselj(0,u)).*H(t + t00,u).*...
    besselj(0,u.*r./A).*exp(-u.*z./A);


I_vx = @(t,u,r,z) (1./(alpha .* rhos .* u  .* (alpha + u)))./A .* 2  .* E.^(-((u .*  z)./ ...
   A)) .*  rhol  .* z  .* besselj(1, (r .*  u)./ A) ...
   .* (u .*  besselj(0, u) -  2  .* besselj(1, u)) .* H_t_v(t + t00, u ) ; 

I_vz = @(t,u,r,z)  (1./(alpha .* rhos .* u.^2  .* (alpha + u)))./A .* 2  .* E.^(-((u .*  z)./ ...
  A)) .*  rhol  .* (A  .* (3 - 4  .* nu) + u .*  z)  .* besselj(0, (r .*  u)./ A) ...
  .* (u .*  besselj(0, u) -  2  .* besselj(1, u)) .* H_t_v(t + t00, u ) ; 

I_dPx = @(t,u,r,z) (1./(alpha .* (alpha + u))) .* 2  .* E.^(-((u .*  z)./ ...
   A)) .*  rhol  .* g .* besselj(1, (r .*  u)./ A) ...
   .* (u .*  besselj(0, u) -  2  .* besselj(1, u)) .* H_t_DP(t + t00, u ) ; 

I_dPz = @(t,u,r,z)  (1./(alpha .* (alpha + u))) .* 2  .* E.^(-((u .*  z)./ ...
  A)) .*  rhol .* g .* besselj(0, (r .*  u)./ A) ...
  .* (u .*  besselj(0, u) -  2  .* besselj(1, u)) .* H_t_DP(t + t00, u ) ; 

I_dPdt = @(t,u,r,z) (-1./(alpha .* u .* (alpha + u))) .* 2 .*A .* E.^(-((u .*  z)./ ...
  A)) .*  rhol .* g .* besselj(0, (r .*  u)./ A) ...
  .* (u .*  besselj(0, u) -  2  .* besselj(1, u)) .* H_t_dpt(t + t00, u ) ; 



P_alt =  2.*rhol.*g./alpha.*nansum(I(t,U,X,Y),3).*du.*hscale;
vx =nansum(I_vx(t,U,X,Y),3).*du.*hscale;
vz = nansum(I_vz(t,U,X,Y),3).*du.*hscale;

dPdx =nansum(I_dPx(t,U,X,Y),3).*du.*hscale/A;
dPdz = nansum(I_dPz(t,U,X,Y),3).*du.*hscale/A;


dPdt =nansum(I_dPdt(t,U,X,Y),3).*du.*hscale/A;

DPDt= vx.*dPdx + vz.*(dPdz + rhos.*g)  - dPdt;


function [dIdt] = dIdt_disp(t,u,tau,hi,dhidt,alpha,ti,t2)
E = exp(1);
HeavisideTheta = @(x) (x>=0);
DiracDelta = @(x) (x==0);

     
     dIdt =  ((alpha.^2  .* (hi + dhidt .*  (t - ti)) + ...
      alpha .*  (hi + dhidt  .* (t - tau - ti) + ...
         E.^((alpha  .* (-t + t2))./(...
          tau .*  (alpha + u))) .*  (-hi + dhidt .*  (-t2 + tau + ti)))  .* u + ...
      dhidt .*  (-1 + E.^((alpha .*  (-t + t2))./( ...
         tau  .* (alpha + u)))) .*  tau .*  u.^2)  .* DiracDelta( ...
     t - t2) - (alpha.^2  .* (hi + dhidt .*  (t - ti)) + ...
      alpha .*  (hi + ...
         E.^((alpha  .* (-t + ti))./(tau  .* (alpha + u))) .*  (-hi + dhidt .*  tau) + ...
         dhidt  .* (t - tau - ti)) .*  u + ...
      dhidt  .* (-1 + E.^((alpha .*  (-t + ti))./(...
         tau  .* (alpha + u))))  .* tau  .* u.^2)  .* DiracDelta(t - ti) + (1./( ...
   tau  .* (alpha + u)))  .* alpha  .* ((alpha.^2  .* dhidt .*  tau + ...
          alpha  .* (2  .* dhidt  .* tau + E.^((alpha .*  (-t + t2))./( ...
             tau  .* (alpha + u))) .*  (hi + dhidt  .* (t2 - tau - ti)))  .* u - ...
         dhidt .*  (-1 + E.^((alpha  .* (-t + t2))./( ...
            tau  .* (alpha + u)))) .*  tau .*  u.^2)  .* HeavisideTheta(...
        t - t2) - (alpha.^2  .* dhidt  .* tau +  alpha .*  (2 .*  dhidt .*  tau + ...
            E.^((alpha .*  (-t + ti))./( tau  .* (alpha + u))) .*  (hi - dhidt .*  tau)) .*  u - ...
         dhidt  .* (-1 + E.^((alpha  .* (-t + ti))./( ...
            tau .*  (alpha + u))))  .* tau  .* u.^2) .*  HeavisideTheta(t - ti)));
     
        
function [I] = gradP_disp(t,u,tau,hi,dhidt,alpha,ti,t2)
% this is displacement, not velocity.
E = exp(1);
%alpha = ps.*g.*A../(2.*mu);rhol = 1000;
HeavisideTheta = @(x) (x>=0);
I = ((alpha  .*  dhidt .*  tau + ...
     alpha  .*  E.^((alpha .*   (-t + t2))./( ...
      alpha  .*  tau + tau .*   u))  .*  (hi + dhidt .*   (t2 - tau - ti)) + ...
     dhidt  .*  (1 - E.^((alpha  .*  (-t + t2))./( ...
        alpha  .*  tau + tau  .*  u))) .*   tau .*   u)  .*  HeavisideTheta(t - t2) - ...
  alpha .*   E.^((alpha .*   (-t + ti))./(alpha .*   tau + tau .*   u)) .*  ...
    hi  .*  HeavisideTheta(t - ti) -  alpha .*   dhidt .*   tau  .*  HeavisideTheta(t - ti) + ...
  alpha  .*  dhidt  .*  E.^((alpha  .*  (-t + ti))./(alpha  .*  tau + tau .*   u)) .*   ...
    tau  .*  HeavisideTheta(t - ti) - dhidt  .*  tau  .*  u  .*  HeavisideTheta(t - ti) + ...
  dhidt  .*  E.^((alpha  .*  (-t + ti))./(alpha .*   tau + tau .*   u)) .*   ...
    tau  .*  u .*   HeavisideTheta(t - ti));


function [dIdt] = dPdt_disp(t,u,tau,hi,dhidt,alpha,ti,t2)
% this is displacement, not velocity.
E = exp(1);
%alpha = ps.*g.*A../(2.*mu);rhol = 1000;
HeavisideTheta = @(x) (x>=0);
DiracDelta = @(x) (x==0);

dIdt =  ((alpha  .*  dhidt  .*  tau +  alpha  .*  E.^((alpha  .*  (-t + t2))./( ...
       alpha  .*  tau + tau .*   u))  .*  (hi + dhidt  .*  (t2 - tau - ti)) + ...
      dhidt .*   (1 - E.^((alpha  .*  (-t + t2))./( ...
         alpha  .*  tau + tau .*   u)))  .*  tau .*   u)  .*  DiracDelta(t - t2) - ...
   alpha  .*  E.^((alpha  .*  (-t + ti))./(alpha .*   tau + tau  .*  u)) .*  ...
     hi .*   DiracDelta(t - ti) - alpha .*   dhidt  .*  tau  .*  DiracDelta(t - ti) + ...
   alpha  .*  dhidt .*   E.^((alpha .* (-t + ti))./(alpha .*   tau + tau .*   u))  .*  ...
     tau  .*  DiracDelta(t - ti) - dhidt  .*  tau  .*  u  .*  DiracDelta(t - ti) + ...
   dhidt  .*  E.^((alpha  .*  (-t + ti))./(alpha  .*  tau + tau  .*  u))  .*  ...
     tau  .*  u  .*  DiracDelta(t - ti) + (1./(tau  .*  (alpha + u)))  .*  ...
   alpha .*   E.^(-((alpha  .*  t)./(alpha  .*  tau +  tau  .*  u))) .*  ...
   (-E.^(((alpha  .*  t2)./( alpha  .*  tau + tau  .*  u)))  .*  (alpha .*   (hi + ...
   dhidt  .*  (t2 - tau - ti)) -  dhidt  .*  tau .*   u)  .*  HeavisideTheta(t - t2) + ...
      E.^((alpha  .*  ti)./( alpha .*   tau +  tau .*   u))  .*  (alpha  .*  (hi - dhidt  .*  tau) ...
          - dhidt  .*  tau .*   u)  .*  HeavisideTheta( t - ti)));



